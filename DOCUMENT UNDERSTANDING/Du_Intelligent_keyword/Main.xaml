<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="748,795" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p7="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p9="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DU.Shared.Utils</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="734,1639" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_doc_path" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="D:\UiPath\PROJECT\Du_Intelligent_keyword\Input" sap:VirtualizedContainerService.HintSize="672,1551" sap2010:WorkflowViewState.IdRef="ForEachFileX_4" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="638,1270" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Sequence.Variables>
              <Variable x:TypeArguments="p9:DocumentTaxonomy" Name="taxonomy" />
              <Variable x:TypeArguments="x:String" Name="document_text" />
              <Variable x:TypeArguments="p3:Document" Name="dom" />
              <Variable x:TypeArguments="p6:ClassificationResult[]" Name="classification_result" />
              <Variable x:TypeArguments="p6:ExtractionResult" Name="extraction_result" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="576,114" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_doc_path]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentFile.ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="576,57" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_4" Taxonomy="[taxonomy]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:LoadTaxonomy>
            <p:DigitizeDocument ApplyOcrMigrated="False" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[dom]" DocumentPath="[str_doc_path]" DocumentText="[document_text]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="576,57" sap2010:WorkflowViewState.IdRef="DigitizeDocument_5">
              <p:DigitizeDocument.OCREngine>
                <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID0}" Argument2="{x:Reference __ReferenceID1}">
                  <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="Y27nzR4IsJH1mqwKqUYi2I4diA5BqeD6ONWxJ0jOR0/Fw2LKSfobytdUMUYPIYobi1KZutY/1PDyS3FXHKVlpw==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_5" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000">
                    <p1:UiPathDocumentOCR.Image>
                      <InArgument x:TypeArguments="sd:Image">
                        <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_47">
                          <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID0" Name="Image" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p1:UiPathDocumentOCR.Image>
                    <p1:UiPathDocumentOCR.PredictionId>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_48">
                          <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID1" Name="PredictionId" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p1:UiPathDocumentOCR.PredictionId>
                  </p1:UiPathDocumentOCR>
                </ActivityFunc>
              </p:DigitizeDocument.OCREngine>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:DigitizeDocument>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="576,957" sap2010:WorkflowViewState.IdRef="CommentOut_5">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="540,815" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <p2:ClassifyDocumentScope ClassificationResults="[classification_result]" DisplayName="Classify Document Scope" DocumentObjectModel="[dom]" DocumentPath="[str_doc_path]" DocumentText="[document_text]" sap:VirtualizedContainerService.HintSize="478,57" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_4" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI9febe03d74cb43338a2882d6ff2f9157&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Muskan.Incoming.Invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.Invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.Reciept&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.Reciept&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.W5&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.W5&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.W9&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.W9&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI9febe03d74cb43338a2882d6ff2f9157&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI9febe03d74cb43338a2882d6ff2f9157&quot;:[]}}">
                    <p2:ClassifyDocumentScope.Classifiers>
                      <p2:IntelligentKeywordClassifier LearningData="{x:Null}" TimeoutMs="{x:Null}" ApiKey="Y27nzR4IsJH1mqwKqUYi2I4diA5BqeD6ONWxJ0jOR0/Fw2LKSfobytdUMUYPIYobi1KZutY/1PDyS3FXHKVlpw==" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="223,234" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_5" LearningFilePath="DocumentProcessing\Classifier.json" PerformDocumentSplitting="True" PersistenceId="UI9febe03d74cb43338a2882d6ff2f9157" SendDocumentsForAlgorithmImprovements="True" UsePageNumbers="False">
                        <p2:IntelligentKeywordClassifier.ClassifierResult>
                          <OutArgument x:TypeArguments="p4:ClassifierResult">
                            <DelegateArgumentReference x:TypeArguments="p4:ClassifierResult">
                              <DelegateOutArgument x:TypeArguments="p4:ClassifierResult" Name="ClassifierResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p2:IntelligentKeywordClassifier.ClassifierResult>
                        <p2:IntelligentKeywordClassifier.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentObjectModel>
                        <p2:IntelligentKeywordClassifier.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentPath>
                        <p2:IntelligentKeywordClassifier.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentText>
                        <p2:IntelligentKeywordClassifier.DocumentTypes>
                          <InArgument x:TypeArguments="p4:ClassifierDocumentType[]">
                            <DelegateArgumentValue x:TypeArguments="p4:ClassifierDocumentType[]">
                              <DelegateInArgument x:TypeArguments="p4:ClassifierDocumentType[]" Name="DocumentTypes" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.DocumentTypes>
                        <p2:IntelligentKeywordClassifier.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p2:IntelligentKeywordClassifier.PredictionId>
                      </p2:IntelligentKeywordClassifier>
                    </p2:ClassifyDocumentScope.Classifiers>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p2:ClassifyDocumentScope>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="478,57" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[str_doc_path]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </WriteLine>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="478,57" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[classification_result(0).DocumentTypeId]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </WriteLine>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="478,57" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[classification_result(0).Confidence.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </WriteLine>
                  <If Condition="[classification_result(0).Confidence&lt;0.75]" DisplayName="Classification-Validation" sap:VirtualizedContainerService.HintSize="478,57" sap2010:WorkflowViewState.IdRef="If_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,190" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="p6:ClassificationResult[]" Name="validated_classification_result" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <p2:PresentClassificationStation AutomaticClassificationResults="[classification_result]" DisplayName="Present Classification Station" DocumentObjectModel="[dom]" DocumentPath="[str_doc_path]" DocumentText="[document_text]" sap:VirtualizedContainerService.HintSize="354,57" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_4" Taxonomy="[taxonomy]" ValidatedClassificationResults="[validated_classification_result]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </p2:PresentClassificationStation>
                        <p5:TrainClassifiersScope HumanValidatedData="{x:Null}" DisplayName="Train Classifiers Scope" DocumentObjectModel="[dom]" DocumentPath="[str_doc_path]" DocumentText="[document_text]" sap:VirtualizedContainerService.HintSize="354,48" HumanValidatedClassificationData="[validated_classification_result]" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_4" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UId90028dcef564917a4d4be426a03e5d9&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Muskan.Incoming.Invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.Invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.Reciept&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.Reciept&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.W5&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.W5&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Muskan.Incoming.W9&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Muskan.Incoming.W9&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UId90028dcef564917a4d4be426a03e5d9&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UId90028dcef564917a4d4be426a03e5d9&quot;:[]}}">
                          <p5:TrainClassifiersScope.Trainables>
                            <p5:IntelligentKeywordClassifierTrainer LearningData="{x:Null}" PredictionId="{x:Null}" DisplayName="Intelligent Keyword Classifier Trainer" sap:VirtualizedContainerService.HintSize="223,138" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifierTrainer_4" LearningFilePath="DocumentProcessing\Classifier.json" PersistenceId="UId90028dcef564917a4d4be426a03e5d9">
                              <p5:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                                <InArgument x:TypeArguments="p3:Document">
                                  <DelegateArgumentValue x:TypeArguments="p3:Document">
                                    <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                                  </DelegateArgumentValue>
                                </InArgument>
                              </p5:IntelligentKeywordClassifierTrainer.DocumentObjectModel>
                              <p5:IntelligentKeywordClassifierTrainer.DocumentPath>
                                <InArgument x:TypeArguments="x:String">
                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                  </DelegateArgumentValue>
                                </InArgument>
                              </p5:IntelligentKeywordClassifierTrainer.DocumentPath>
                              <p5:IntelligentKeywordClassifierTrainer.DocumentText>
                                <InArgument x:TypeArguments="x:String">
                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                  </DelegateArgumentValue>
                                </InArgument>
                              </p5:IntelligentKeywordClassifierTrainer.DocumentText>
                              <p5:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                                <InArgument x:TypeArguments="p6:ExtractionResult[]">
                                  <DelegateArgumentValue x:TypeArguments="p6:ExtractionResult[]">
                                    <DelegateInArgument x:TypeArguments="p6:ExtractionResult[]" Name="HumanValidatedData" />
                                  </DelegateArgumentValue>
                                </InArgument>
                              </p5:IntelligentKeywordClassifierTrainer.HumanValidatedData>
                            </p5:IntelligentKeywordClassifierTrainer>
                          </p5:TrainClassifiersScope.Trainables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </p5:TrainClassifiersScope>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                  <p7:DataExtractionScope DocumentTypeId="{x:Null}" ApplyGenerativeValidation="False" ClassificationResult="[classification_result(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[dom]" DocumentPath="[str_doc_path]" DocumentText="[document_text]" ExtractionResult="[extraction_result]" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="99" sap:VirtualizedContainerService.HintSize="478,445" sap2010:WorkflowViewState.IdRef="DataExtractionScope_2" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{},&quot;ExtractorMinimumConfidence&quot;:{},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIcf398c0f3efd4429ba6e189924568bb5&quot;:[]}}">
                    <p7:DataExtractionScope.Extractors>
                      <p7:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;Muskan.Incoming.Invoice&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;Muskan.Incoming.Invoice.InvoiceNumber&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;(?i)(?:Invoice[-\\s]?(?:Number|No\\.?|#|#)?\\s*[:\\-]?\\s*)?([A-Z]*\\d+[-\\d]*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:false,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;(?i)(?:Invoice[-\\\\s]?(?:Number|No\\\\.?|#|#)?\\\\s*[:\\\\-]?\\\\s*)?([A-Z]*\\\\d+[-\\\\d]*)\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="223,100" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_2" PersistenceId="UIcf398c0f3efd4429ba6e189924568bb5" Timeout="2000" UseVisualAlignment="False">
                        <p7:RegexBasedExtractor.DocumentBounds>
                          <InArgument x:TypeArguments="p6:ResultsDocumentBounds">
                            <DelegateArgumentValue x:TypeArguments="p6:ResultsDocumentBounds">
                              <DelegateInArgument x:TypeArguments="p6:ResultsDocumentBounds" Name="DocumentBounds" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.DocumentBounds>
                        <p7:RegexBasedExtractor.DocumentObjectModel>
                          <InArgument x:TypeArguments="p3:Document">
                            <DelegateArgumentValue x:TypeArguments="p3:Document">
                              <DelegateInArgument x:TypeArguments="p3:Document" Name="DocumentObjectModel" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.DocumentObjectModel>
                        <p7:RegexBasedExtractor.DocumentPath>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.DocumentPath>
                        <p7:RegexBasedExtractor.DocumentText>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.DocumentText>
                        <p7:RegexBasedExtractor.ExtractorDocumentType>
                          <InArgument x:TypeArguments="p8:ExtractorDocumentType">
                            <DelegateArgumentValue x:TypeArguments="p8:ExtractorDocumentType">
                              <DelegateInArgument x:TypeArguments="p8:ExtractorDocumentType" Name="ExtractorDocumentType" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.ExtractorDocumentType>
                        <p7:RegexBasedExtractor.ExtractorResult>
                          <OutArgument x:TypeArguments="p8:ExtractorResult">
                            <DelegateArgumentReference x:TypeArguments="p8:ExtractorResult">
                              <DelegateOutArgument x:TypeArguments="p8:ExtractorResult" Name="ExtractorResult" />
                            </DelegateArgumentReference>
                          </OutArgument>
                        </p7:RegexBasedExtractor.ExtractorResult>
                        <p7:RegexBasedExtractor.PredictionId>
                          <InArgument x:TypeArguments="x:String">
                            <DelegateArgumentValue x:TypeArguments="x:String">
                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                            </DelegateArgumentValue>
                          </InArgument>
                        </p7:RegexBasedExtractor.PredictionId>
                      </p7:RegexBasedExtractor>
                    </p7:DataExtractionScope.Extractors>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </p7:DataExtractionScope>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
  </Sequence>
</Activity>